version: 2.1

orbs:
  python: circleci/python@0.2.1

jobs:
  build-and-test:
    working_directory: ~/geoml
    docker:
      - image: circleci/python:3.8.10
        environment:
          DATABASE_URL: postgresql://postgres@localhost/circle_test?sslmode=disable
          TEST_DATABASE_URL: postgresql://postgres@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:11.8-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: password

    steps:
      - checkout  # Checkout repo from github
      - run:
          name: Create virtual environment
          command: |
             wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh
             bash miniconda.sh -b -p "$HOME"/miniconda
             source "$HOME"/miniconda/etc/profile.d/conda.sh
             conda activate base
             conda config --set always_yes yes --set auto_update_conda false
             conda update conda
             # conda create -n test_env python=$PYTHON_VERSION  # Create test environment
      - run:
          name: Grant CircleCI access to dependency locations
          command: |
              sudo chown -R circleci:circleci /usr/local/bin
              sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
      - restore_cache:
          name: Restoring cache
          key: v1-deps-{{ .Branch }}-{{ checksum "requirements/environment_test.yml" }}
      - run:
          name: Install Python dependencies
          command: |
             source "$HOME"/miniconda/etc/profile.d/conda.sh
             conda env create -f requirements/environment_test.yml
             conda install -n test_env -c conda-forge postgis

             conda activate test_env
             pip install -r requirements/dev_pip.txt
             pip install -r requirements/testing_pip.txt
      - save_cache:
          name: Saving cache
          key: v1-deps-{{ .Branch }}-{{ checksum "requirements/environment_test.yml" }}
          paths:
            - "requirements/environment_test.yml"
      - run:
          name: Conda information
          command: |
             source "$HOME"/miniconda/etc/profile.d/conda.sh
             conda activate test_env
             conda info
             conda config --show
             conda list --show-channel-urls
      - run:
          name: Install PostgreSQL dependencies
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-client-11
            pg_isready -d test -h localhost -p 5432 -U postgres
            # ls /home/circleci/miniconda
            psql -U postgres -h localhost -p 5432 -c "create database test;"
      - run:
          name: Run tests
          command: |
             source "$HOME"/miniconda/etc/profile.d/conda.sh
             # find "$HOME" -name postgis.control
             conda activate test_env
             mkdir test-results
             pytest --pg-extensions=postgis,postgis_raster --junitxml=test-results/junit.xml --cov=db --cov-report=xml -v
      - run:
          name: Upload code coverage
          command: |
             source "$HOME"/miniconda/etc/profile.d/conda.sh
             conda activate test_env
             codecov -t 59dd1844-ad4a-46d7-88a0-27372244bacd
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

workflows:
  main:
    jobs:
      - build-and-test
